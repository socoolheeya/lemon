/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.lemon.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Room implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long roomId;
    private final UByte adultCount;
    private final UByte bathroomCount;
    private final UByte childrenCount;
    private final LocalDateTime createdAt;
    private final String caretedBy;
    private final String isSmoking;
    private final UByte livingCount;
    private final UByte maxOccupancy;
    private final UByte minOccupancy;
    private final String name;
    private final UByte roomCount;
    private final String roomView;
    private final LocalDateTime updatedAt;
    private final String updatedBy;
    private final String useYn;

    public Room(Room value) {
        this.roomId = value.roomId;
        this.adultCount = value.adultCount;
        this.bathroomCount = value.bathroomCount;
        this.childrenCount = value.childrenCount;
        this.createdAt = value.createdAt;
        this.caretedBy = value.caretedBy;
        this.isSmoking = value.isSmoking;
        this.livingCount = value.livingCount;
        this.maxOccupancy = value.maxOccupancy;
        this.minOccupancy = value.minOccupancy;
        this.name = value.name;
        this.roomCount = value.roomCount;
        this.roomView = value.roomView;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.useYn = value.useYn;
    }

    public Room(
        Long roomId,
        UByte adultCount,
        UByte bathroomCount,
        UByte childrenCount,
        LocalDateTime createdAt,
        String caretedBy,
        String isSmoking,
        UByte livingCount,
        UByte maxOccupancy,
        UByte minOccupancy,
        String name,
        UByte roomCount,
        String roomView,
        LocalDateTime updatedAt,
        String updatedBy,
        String useYn
    ) {
        this.roomId = roomId;
        this.adultCount = adultCount;
        this.bathroomCount = bathroomCount;
        this.childrenCount = childrenCount;
        this.createdAt = createdAt;
        this.caretedBy = caretedBy;
        this.isSmoking = isSmoking;
        this.livingCount = livingCount;
        this.maxOccupancy = maxOccupancy;
        this.minOccupancy = minOccupancy;
        this.name = name;
        this.roomCount = roomCount;
        this.roomView = roomView;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.useYn = useYn;
    }

    /**
     * Getter for <code>lemon.room.room_id</code>. Room ID
     */
    public Long getRoomId() {
        return this.roomId;
    }

    /**
     * Getter for <code>lemon.room.adult_count</code>. 어른 인원 수
     */
    public UByte getAdultCount() {
        return this.adultCount;
    }

    /**
     * Getter for <code>lemon.room.bathroom_count</code>. 욕실 수
     */
    public UByte getBathroomCount() {
        return this.bathroomCount;
    }

    /**
     * Getter for <code>lemon.room.children_count</code>. 어린이 인원 수
     */
    public UByte getChildrenCount() {
        return this.childrenCount;
    }

    /**
     * Getter for <code>lemon.room.created_at</code>. 생성일
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>lemon.room.careted_by</code>. 생성자
     */
    public String getCaretedBy() {
        return this.caretedBy;
    }

    /**
     * Getter for <code>lemon.room.is_smoking</code>. 흡연 여부
     */
    public String getIsSmoking() {
        return this.isSmoking;
    }

    /**
     * Getter for <code>lemon.room.living_count</code>. 거실 수
     */
    public UByte getLivingCount() {
        return this.livingCount;
    }

    /**
     * Getter for <code>lemon.room.max_occupancy</code>. 최대 인원
     */
    public UByte getMaxOccupancy() {
        return this.maxOccupancy;
    }

    /**
     * Getter for <code>lemon.room.min_occupancy</code>. 최소 인원
     */
    public UByte getMinOccupancy() {
        return this.minOccupancy;
    }

    /**
     * Getter for <code>lemon.room.name</code>. 방 이름
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>lemon.room.room_count</code>. 방 갯수
     */
    public UByte getRoomCount() {
        return this.roomCount;
    }

    /**
     * Getter for <code>lemon.room.room_view</code>. 뷰 종류
     */
    public String getRoomView() {
        return this.roomView;
    }

    /**
     * Getter for <code>lemon.room.updated_at</code>. 수정일
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for <code>lemon.room.updated_by</code>. 수정자
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Getter for <code>lemon.room.use_yn</code>. 사용여부
     */
    public String getUseYn() {
        return this.useYn;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Room other = (Room) obj;
        if (this.roomId == null) {
            if (other.roomId != null)
                return false;
        }
        else if (!this.roomId.equals(other.roomId))
            return false;
        if (this.adultCount == null) {
            if (other.adultCount != null)
                return false;
        }
        else if (!this.adultCount.equals(other.adultCount))
            return false;
        if (this.bathroomCount == null) {
            if (other.bathroomCount != null)
                return false;
        }
        else if (!this.bathroomCount.equals(other.bathroomCount))
            return false;
        if (this.childrenCount == null) {
            if (other.childrenCount != null)
                return false;
        }
        else if (!this.childrenCount.equals(other.childrenCount))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.caretedBy == null) {
            if (other.caretedBy != null)
                return false;
        }
        else if (!this.caretedBy.equals(other.caretedBy))
            return false;
        if (this.isSmoking == null) {
            if (other.isSmoking != null)
                return false;
        }
        else if (!this.isSmoking.equals(other.isSmoking))
            return false;
        if (this.livingCount == null) {
            if (other.livingCount != null)
                return false;
        }
        else if (!this.livingCount.equals(other.livingCount))
            return false;
        if (this.maxOccupancy == null) {
            if (other.maxOccupancy != null)
                return false;
        }
        else if (!this.maxOccupancy.equals(other.maxOccupancy))
            return false;
        if (this.minOccupancy == null) {
            if (other.minOccupancy != null)
                return false;
        }
        else if (!this.minOccupancy.equals(other.minOccupancy))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.roomCount == null) {
            if (other.roomCount != null)
                return false;
        }
        else if (!this.roomCount.equals(other.roomCount))
            return false;
        if (this.roomView == null) {
            if (other.roomView != null)
                return false;
        }
        else if (!this.roomView.equals(other.roomView))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.useYn == null) {
            if (other.useYn != null)
                return false;
        }
        else if (!this.useYn.equals(other.useYn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.roomId == null) ? 0 : this.roomId.hashCode());
        result = prime * result + ((this.adultCount == null) ? 0 : this.adultCount.hashCode());
        result = prime * result + ((this.bathroomCount == null) ? 0 : this.bathroomCount.hashCode());
        result = prime * result + ((this.childrenCount == null) ? 0 : this.childrenCount.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.caretedBy == null) ? 0 : this.caretedBy.hashCode());
        result = prime * result + ((this.isSmoking == null) ? 0 : this.isSmoking.hashCode());
        result = prime * result + ((this.livingCount == null) ? 0 : this.livingCount.hashCode());
        result = prime * result + ((this.maxOccupancy == null) ? 0 : this.maxOccupancy.hashCode());
        result = prime * result + ((this.minOccupancy == null) ? 0 : this.minOccupancy.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.roomCount == null) ? 0 : this.roomCount.hashCode());
        result = prime * result + ((this.roomView == null) ? 0 : this.roomView.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.useYn == null) ? 0 : this.useYn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Room (");

        sb.append(roomId);
        sb.append(", ").append(adultCount);
        sb.append(", ").append(bathroomCount);
        sb.append(", ").append(childrenCount);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(caretedBy);
        sb.append(", ").append(isSmoking);
        sb.append(", ").append(livingCount);
        sb.append(", ").append(maxOccupancy);
        sb.append(", ").append(minOccupancy);
        sb.append(", ").append(name);
        sb.append(", ").append(roomCount);
        sb.append(", ").append(roomView);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(useYn);

        sb.append(")");
        return sb.toString();
    }
}
