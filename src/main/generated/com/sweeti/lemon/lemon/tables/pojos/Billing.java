/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.lemon.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Billing implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long billingId;
    private final Long acommodationId;
    private final String accommodationName;
    private final BigDecimal additionalCost;
    private final BigDecimal billingAdditionalCost;
    private final BigDecimal billingCost;
    private final BigDecimal billingDeductionCost;
    private final LocalDateTime billingDueDate;
    private final BigDecimal cancelFee;
    private final LocalDateTime createdAt;
    private final String caretedBy;
    private final BigDecimal discountCost;
    private final BigDecimal fee;
    private final BigDecimal sellingCost;
    private final LocalDateTime updatedAt;
    private final String updatedBy;

    public Billing(Billing value) {
        this.billingId = value.billingId;
        this.acommodationId = value.acommodationId;
        this.accommodationName = value.accommodationName;
        this.additionalCost = value.additionalCost;
        this.billingAdditionalCost = value.billingAdditionalCost;
        this.billingCost = value.billingCost;
        this.billingDeductionCost = value.billingDeductionCost;
        this.billingDueDate = value.billingDueDate;
        this.cancelFee = value.cancelFee;
        this.createdAt = value.createdAt;
        this.caretedBy = value.caretedBy;
        this.discountCost = value.discountCost;
        this.fee = value.fee;
        this.sellingCost = value.sellingCost;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public Billing(
        Long billingId,
        Long acommodationId,
        String accommodationName,
        BigDecimal additionalCost,
        BigDecimal billingAdditionalCost,
        BigDecimal billingCost,
        BigDecimal billingDeductionCost,
        LocalDateTime billingDueDate,
        BigDecimal cancelFee,
        LocalDateTime createdAt,
        String caretedBy,
        BigDecimal discountCost,
        BigDecimal fee,
        BigDecimal sellingCost,
        LocalDateTime updatedAt,
        String updatedBy
    ) {
        this.billingId = billingId;
        this.acommodationId = acommodationId;
        this.accommodationName = accommodationName;
        this.additionalCost = additionalCost;
        this.billingAdditionalCost = billingAdditionalCost;
        this.billingCost = billingCost;
        this.billingDeductionCost = billingDeductionCost;
        this.billingDueDate = billingDueDate;
        this.cancelFee = cancelFee;
        this.createdAt = createdAt;
        this.caretedBy = caretedBy;
        this.discountCost = discountCost;
        this.fee = fee;
        this.sellingCost = sellingCost;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>lemon.billing.billing_id</code>. 정산ID
     */
    public Long getBillingId() {
        return this.billingId;
    }

    /**
     * Getter for <code>lemon.billing.acommodation_id</code>. 숙박시설ID
     */
    public Long getAcommodationId() {
        return this.acommodationId;
    }

    /**
     * Getter for <code>lemon.billing.accommodation_name</code>. 숙박시설명
     */
    public String getAccommodationName() {
        return this.accommodationName;
    }

    /**
     * Getter for <code>lemon.billing.additional_cost</code>. 추가금액
     */
    public BigDecimal getAdditionalCost() {
        return this.additionalCost;
    }

    /**
     * Getter for <code>lemon.billing.billing_additional_cost</code>. 정산 추가금액
     */
    public BigDecimal getBillingAdditionalCost() {
        return this.billingAdditionalCost;
    }

    /**
     * Getter for <code>lemon.billing.billing_cost</code>. 정산금액
     */
    public BigDecimal getBillingCost() {
        return this.billingCost;
    }

    /**
     * Getter for <code>lemon.billing.billing_deduction_cost</code>. 정산 차감금액
     */
    public BigDecimal getBillingDeductionCost() {
        return this.billingDeductionCost;
    }

    /**
     * Getter for <code>lemon.billing.billing_due_date</code>. 정산예정일
     */
    public LocalDateTime getBillingDueDate() {
        return this.billingDueDate;
    }

    /**
     * Getter for <code>lemon.billing.cancel_fee</code>. 취소 수수료
     */
    public BigDecimal getCancelFee() {
        return this.cancelFee;
    }

    /**
     * Getter for <code>lemon.billing.created_at</code>. 생성일
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>lemon.billing.careted_by</code>. 생성자
     */
    public String getCaretedBy() {
        return this.caretedBy;
    }

    /**
     * Getter for <code>lemon.billing.discount_cost</code>. 할인금액
     */
    public BigDecimal getDiscountCost() {
        return this.discountCost;
    }

    /**
     * Getter for <code>lemon.billing.fee</code>. 수수료
     */
    public BigDecimal getFee() {
        return this.fee;
    }

    /**
     * Getter for <code>lemon.billing.selling_cost</code>. 판매금액
     */
    public BigDecimal getSellingCost() {
        return this.sellingCost;
    }

    /**
     * Getter for <code>lemon.billing.updated_at</code>. 수정일
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for <code>lemon.billing.updated_by</code>. 수정자
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Billing other = (Billing) obj;
        if (this.billingId == null) {
            if (other.billingId != null)
                return false;
        }
        else if (!this.billingId.equals(other.billingId))
            return false;
        if (this.acommodationId == null) {
            if (other.acommodationId != null)
                return false;
        }
        else if (!this.acommodationId.equals(other.acommodationId))
            return false;
        if (this.accommodationName == null) {
            if (other.accommodationName != null)
                return false;
        }
        else if (!this.accommodationName.equals(other.accommodationName))
            return false;
        if (this.additionalCost == null) {
            if (other.additionalCost != null)
                return false;
        }
        else if (!this.additionalCost.equals(other.additionalCost))
            return false;
        if (this.billingAdditionalCost == null) {
            if (other.billingAdditionalCost != null)
                return false;
        }
        else if (!this.billingAdditionalCost.equals(other.billingAdditionalCost))
            return false;
        if (this.billingCost == null) {
            if (other.billingCost != null)
                return false;
        }
        else if (!this.billingCost.equals(other.billingCost))
            return false;
        if (this.billingDeductionCost == null) {
            if (other.billingDeductionCost != null)
                return false;
        }
        else if (!this.billingDeductionCost.equals(other.billingDeductionCost))
            return false;
        if (this.billingDueDate == null) {
            if (other.billingDueDate != null)
                return false;
        }
        else if (!this.billingDueDate.equals(other.billingDueDate))
            return false;
        if (this.cancelFee == null) {
            if (other.cancelFee != null)
                return false;
        }
        else if (!this.cancelFee.equals(other.cancelFee))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.caretedBy == null) {
            if (other.caretedBy != null)
                return false;
        }
        else if (!this.caretedBy.equals(other.caretedBy))
            return false;
        if (this.discountCost == null) {
            if (other.discountCost != null)
                return false;
        }
        else if (!this.discountCost.equals(other.discountCost))
            return false;
        if (this.fee == null) {
            if (other.fee != null)
                return false;
        }
        else if (!this.fee.equals(other.fee))
            return false;
        if (this.sellingCost == null) {
            if (other.sellingCost != null)
                return false;
        }
        else if (!this.sellingCost.equals(other.sellingCost))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.billingId == null) ? 0 : this.billingId.hashCode());
        result = prime * result + ((this.acommodationId == null) ? 0 : this.acommodationId.hashCode());
        result = prime * result + ((this.accommodationName == null) ? 0 : this.accommodationName.hashCode());
        result = prime * result + ((this.additionalCost == null) ? 0 : this.additionalCost.hashCode());
        result = prime * result + ((this.billingAdditionalCost == null) ? 0 : this.billingAdditionalCost.hashCode());
        result = prime * result + ((this.billingCost == null) ? 0 : this.billingCost.hashCode());
        result = prime * result + ((this.billingDeductionCost == null) ? 0 : this.billingDeductionCost.hashCode());
        result = prime * result + ((this.billingDueDate == null) ? 0 : this.billingDueDate.hashCode());
        result = prime * result + ((this.cancelFee == null) ? 0 : this.cancelFee.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.caretedBy == null) ? 0 : this.caretedBy.hashCode());
        result = prime * result + ((this.discountCost == null) ? 0 : this.discountCost.hashCode());
        result = prime * result + ((this.fee == null) ? 0 : this.fee.hashCode());
        result = prime * result + ((this.sellingCost == null) ? 0 : this.sellingCost.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Billing (");

        sb.append(billingId);
        sb.append(", ").append(acommodationId);
        sb.append(", ").append(accommodationName);
        sb.append(", ").append(additionalCost);
        sb.append(", ").append(billingAdditionalCost);
        sb.append(", ").append(billingCost);
        sb.append(", ").append(billingDeductionCost);
        sb.append(", ").append(billingDueDate);
        sb.append(", ").append(cancelFee);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(caretedBy);
        sb.append(", ").append(discountCost);
        sb.append(", ").append(fee);
        sb.append(", ").append(sellingCost);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
