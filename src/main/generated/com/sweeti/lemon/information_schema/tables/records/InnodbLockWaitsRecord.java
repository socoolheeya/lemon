/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.records;


import com.sweeti.lemon.information_schema.tables.InnodbLockWaits;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbLockWaitsRecord extends TableRecordImpl<InnodbLockWaitsRecord> implements Record4<ULong, String, ULong, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.INNODB_LOCK_WAITS.requesting_trx_id</code>.
     */
    public InnodbLockWaitsRecord setRequestingTrxId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.requesting_trx_id</code>.
     */
    public ULong getRequestingTrxId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.INNODB_LOCK_WAITS.requested_lock_id</code>.
     */
    public InnodbLockWaitsRecord setRequestedLockId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.requested_lock_id</code>.
     */
    public String getRequestedLockId() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_trx_id</code>.
     */
    public InnodbLockWaitsRecord setBlockingTrxId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_trx_id</code>.
     */
    public ULong getBlockingTrxId() {
        return (ULong) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_lock_id</code>.
     */
    public InnodbLockWaitsRecord setBlockingLockId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_lock_id</code>.
     */
    public String getBlockingLockId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, String, ULong, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<ULong, String, ULong, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return InnodbLockWaits.INNODB_LOCK_WAITS.REQUESTING_TRX_ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbLockWaits.INNODB_LOCK_WAITS.REQUESTED_LOCK_ID;
    }

    @Override
    public Field<ULong> field3() {
        return InnodbLockWaits.INNODB_LOCK_WAITS.BLOCKING_TRX_ID;
    }

    @Override
    public Field<String> field4() {
        return InnodbLockWaits.INNODB_LOCK_WAITS.BLOCKING_LOCK_ID;
    }

    @Override
    public ULong component1() {
        return getRequestingTrxId();
    }

    @Override
    public String component2() {
        return getRequestedLockId();
    }

    @Override
    public ULong component3() {
        return getBlockingTrxId();
    }

    @Override
    public String component4() {
        return getBlockingLockId();
    }

    @Override
    public ULong value1() {
        return getRequestingTrxId();
    }

    @Override
    public String value2() {
        return getRequestedLockId();
    }

    @Override
    public ULong value3() {
        return getBlockingTrxId();
    }

    @Override
    public String value4() {
        return getBlockingLockId();
    }

    @Override
    public InnodbLockWaitsRecord value1(ULong value) {
        setRequestingTrxId(value);
        return this;
    }

    @Override
    public InnodbLockWaitsRecord value2(String value) {
        setRequestedLockId(value);
        return this;
    }

    @Override
    public InnodbLockWaitsRecord value3(ULong value) {
        setBlockingTrxId(value);
        return this;
    }

    @Override
    public InnodbLockWaitsRecord value4(String value) {
        setBlockingLockId(value);
        return this;
    }

    @Override
    public InnodbLockWaitsRecord values(ULong value1, String value2, ULong value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbLockWaitsRecord
     */
    public InnodbLockWaitsRecord() {
        super(InnodbLockWaits.INNODB_LOCK_WAITS);
    }

    /**
     * Create a detached, initialised InnodbLockWaitsRecord
     */
    public InnodbLockWaitsRecord(ULong requestingTrxId, String requestedLockId, ULong blockingTrxId, String blockingLockId) {
        super(InnodbLockWaits.INNODB_LOCK_WAITS);

        setRequestingTrxId(requestingTrxId);
        setRequestedLockId(requestedLockId);
        setBlockingTrxId(blockingTrxId);
        setBlockingLockId(blockingLockId);
    }

    /**
     * Create a detached, initialised InnodbLockWaitsRecord
     */
    public InnodbLockWaitsRecord(com.sweeti.lemon.information_schema.tables.pojos.InnodbLockWaits value) {
        super(InnodbLockWaits.INNODB_LOCK_WAITS);

        if (value != null) {
            setRequestingTrxId(value.getRequestingTrxId());
            setRequestedLockId(value.getRequestedLockId());
            setBlockingTrxId(value.getBlockingTrxId());
            setBlockingLockId(value.getBlockingLockId());
        }
    }
}
