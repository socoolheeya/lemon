/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Profiling implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer queryId;
    private final Integer seq;
    private final String state;
    private final BigDecimal duration;
    private final BigDecimal cpuUser;
    private final BigDecimal cpuSystem;
    private final Integer contextVoluntary;
    private final Integer contextInvoluntary;
    private final Integer blockOpsIn;
    private final Integer blockOpsOut;
    private final Integer messagesSent;
    private final Integer messagesReceived;
    private final Integer pageFaultsMajor;
    private final Integer pageFaultsMinor;
    private final Integer swaps;
    private final String sourceFunction;
    private final String sourceFile;
    private final Integer sourceLine;

    public Profiling(Profiling value) {
        this.queryId = value.queryId;
        this.seq = value.seq;
        this.state = value.state;
        this.duration = value.duration;
        this.cpuUser = value.cpuUser;
        this.cpuSystem = value.cpuSystem;
        this.contextVoluntary = value.contextVoluntary;
        this.contextInvoluntary = value.contextInvoluntary;
        this.blockOpsIn = value.blockOpsIn;
        this.blockOpsOut = value.blockOpsOut;
        this.messagesSent = value.messagesSent;
        this.messagesReceived = value.messagesReceived;
        this.pageFaultsMajor = value.pageFaultsMajor;
        this.pageFaultsMinor = value.pageFaultsMinor;
        this.swaps = value.swaps;
        this.sourceFunction = value.sourceFunction;
        this.sourceFile = value.sourceFile;
        this.sourceLine = value.sourceLine;
    }

    public Profiling(
        Integer queryId,
        Integer seq,
        String state,
        BigDecimal duration,
        BigDecimal cpuUser,
        BigDecimal cpuSystem,
        Integer contextVoluntary,
        Integer contextInvoluntary,
        Integer blockOpsIn,
        Integer blockOpsOut,
        Integer messagesSent,
        Integer messagesReceived,
        Integer pageFaultsMajor,
        Integer pageFaultsMinor,
        Integer swaps,
        String sourceFunction,
        String sourceFile,
        Integer sourceLine
    ) {
        this.queryId = queryId;
        this.seq = seq;
        this.state = state;
        this.duration = duration;
        this.cpuUser = cpuUser;
        this.cpuSystem = cpuSystem;
        this.contextVoluntary = contextVoluntary;
        this.contextInvoluntary = contextInvoluntary;
        this.blockOpsIn = blockOpsIn;
        this.blockOpsOut = blockOpsOut;
        this.messagesSent = messagesSent;
        this.messagesReceived = messagesReceived;
        this.pageFaultsMajor = pageFaultsMajor;
        this.pageFaultsMinor = pageFaultsMinor;
        this.swaps = swaps;
        this.sourceFunction = sourceFunction;
        this.sourceFile = sourceFile;
        this.sourceLine = sourceLine;
    }

    /**
     * Getter for <code>information_schema.PROFILING.QUERY_ID</code>.
     */
    public Integer getQueryId() {
        return this.queryId;
    }

    /**
     * Getter for <code>information_schema.PROFILING.SEQ</code>.
     */
    public Integer getSeq() {
        return this.seq;
    }

    /**
     * Getter for <code>information_schema.PROFILING.STATE</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Getter for <code>information_schema.PROFILING.DURATION</code>.
     */
    public BigDecimal getDuration() {
        return this.duration;
    }

    /**
     * Getter for <code>information_schema.PROFILING.CPU_USER</code>.
     */
    public BigDecimal getCpuUser() {
        return this.cpuUser;
    }

    /**
     * Getter for <code>information_schema.PROFILING.CPU_SYSTEM</code>.
     */
    public BigDecimal getCpuSystem() {
        return this.cpuSystem;
    }

    /**
     * Getter for <code>information_schema.PROFILING.CONTEXT_VOLUNTARY</code>.
     */
    public Integer getContextVoluntary() {
        return this.contextVoluntary;
    }

    /**
     * Getter for <code>information_schema.PROFILING.CONTEXT_INVOLUNTARY</code>.
     */
    public Integer getContextInvoluntary() {
        return this.contextInvoluntary;
    }

    /**
     * Getter for <code>information_schema.PROFILING.BLOCK_OPS_IN</code>.
     */
    public Integer getBlockOpsIn() {
        return this.blockOpsIn;
    }

    /**
     * Getter for <code>information_schema.PROFILING.BLOCK_OPS_OUT</code>.
     */
    public Integer getBlockOpsOut() {
        return this.blockOpsOut;
    }

    /**
     * Getter for <code>information_schema.PROFILING.MESSAGES_SENT</code>.
     */
    public Integer getMessagesSent() {
        return this.messagesSent;
    }

    /**
     * Getter for <code>information_schema.PROFILING.MESSAGES_RECEIVED</code>.
     */
    public Integer getMessagesReceived() {
        return this.messagesReceived;
    }

    /**
     * Getter for <code>information_schema.PROFILING.PAGE_FAULTS_MAJOR</code>.
     */
    public Integer getPageFaultsMajor() {
        return this.pageFaultsMajor;
    }

    /**
     * Getter for <code>information_schema.PROFILING.PAGE_FAULTS_MINOR</code>.
     */
    public Integer getPageFaultsMinor() {
        return this.pageFaultsMinor;
    }

    /**
     * Getter for <code>information_schema.PROFILING.SWAPS</code>.
     */
    public Integer getSwaps() {
        return this.swaps;
    }

    /**
     * Getter for <code>information_schema.PROFILING.SOURCE_FUNCTION</code>.
     */
    public String getSourceFunction() {
        return this.sourceFunction;
    }

    /**
     * Getter for <code>information_schema.PROFILING.SOURCE_FILE</code>.
     */
    public String getSourceFile() {
        return this.sourceFile;
    }

    /**
     * Getter for <code>information_schema.PROFILING.SOURCE_LINE</code>.
     */
    public Integer getSourceLine() {
        return this.sourceLine;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Profiling other = (Profiling) obj;
        if (this.queryId == null) {
            if (other.queryId != null)
                return false;
        }
        else if (!this.queryId.equals(other.queryId))
            return false;
        if (this.seq == null) {
            if (other.seq != null)
                return false;
        }
        else if (!this.seq.equals(other.seq))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.duration == null) {
            if (other.duration != null)
                return false;
        }
        else if (!this.duration.equals(other.duration))
            return false;
        if (this.cpuUser == null) {
            if (other.cpuUser != null)
                return false;
        }
        else if (!this.cpuUser.equals(other.cpuUser))
            return false;
        if (this.cpuSystem == null) {
            if (other.cpuSystem != null)
                return false;
        }
        else if (!this.cpuSystem.equals(other.cpuSystem))
            return false;
        if (this.contextVoluntary == null) {
            if (other.contextVoluntary != null)
                return false;
        }
        else if (!this.contextVoluntary.equals(other.contextVoluntary))
            return false;
        if (this.contextInvoluntary == null) {
            if (other.contextInvoluntary != null)
                return false;
        }
        else if (!this.contextInvoluntary.equals(other.contextInvoluntary))
            return false;
        if (this.blockOpsIn == null) {
            if (other.blockOpsIn != null)
                return false;
        }
        else if (!this.blockOpsIn.equals(other.blockOpsIn))
            return false;
        if (this.blockOpsOut == null) {
            if (other.blockOpsOut != null)
                return false;
        }
        else if (!this.blockOpsOut.equals(other.blockOpsOut))
            return false;
        if (this.messagesSent == null) {
            if (other.messagesSent != null)
                return false;
        }
        else if (!this.messagesSent.equals(other.messagesSent))
            return false;
        if (this.messagesReceived == null) {
            if (other.messagesReceived != null)
                return false;
        }
        else if (!this.messagesReceived.equals(other.messagesReceived))
            return false;
        if (this.pageFaultsMajor == null) {
            if (other.pageFaultsMajor != null)
                return false;
        }
        else if (!this.pageFaultsMajor.equals(other.pageFaultsMajor))
            return false;
        if (this.pageFaultsMinor == null) {
            if (other.pageFaultsMinor != null)
                return false;
        }
        else if (!this.pageFaultsMinor.equals(other.pageFaultsMinor))
            return false;
        if (this.swaps == null) {
            if (other.swaps != null)
                return false;
        }
        else if (!this.swaps.equals(other.swaps))
            return false;
        if (this.sourceFunction == null) {
            if (other.sourceFunction != null)
                return false;
        }
        else if (!this.sourceFunction.equals(other.sourceFunction))
            return false;
        if (this.sourceFile == null) {
            if (other.sourceFile != null)
                return false;
        }
        else if (!this.sourceFile.equals(other.sourceFile))
            return false;
        if (this.sourceLine == null) {
            if (other.sourceLine != null)
                return false;
        }
        else if (!this.sourceLine.equals(other.sourceLine))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.queryId == null) ? 0 : this.queryId.hashCode());
        result = prime * result + ((this.seq == null) ? 0 : this.seq.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.duration == null) ? 0 : this.duration.hashCode());
        result = prime * result + ((this.cpuUser == null) ? 0 : this.cpuUser.hashCode());
        result = prime * result + ((this.cpuSystem == null) ? 0 : this.cpuSystem.hashCode());
        result = prime * result + ((this.contextVoluntary == null) ? 0 : this.contextVoluntary.hashCode());
        result = prime * result + ((this.contextInvoluntary == null) ? 0 : this.contextInvoluntary.hashCode());
        result = prime * result + ((this.blockOpsIn == null) ? 0 : this.blockOpsIn.hashCode());
        result = prime * result + ((this.blockOpsOut == null) ? 0 : this.blockOpsOut.hashCode());
        result = prime * result + ((this.messagesSent == null) ? 0 : this.messagesSent.hashCode());
        result = prime * result + ((this.messagesReceived == null) ? 0 : this.messagesReceived.hashCode());
        result = prime * result + ((this.pageFaultsMajor == null) ? 0 : this.pageFaultsMajor.hashCode());
        result = prime * result + ((this.pageFaultsMinor == null) ? 0 : this.pageFaultsMinor.hashCode());
        result = prime * result + ((this.swaps == null) ? 0 : this.swaps.hashCode());
        result = prime * result + ((this.sourceFunction == null) ? 0 : this.sourceFunction.hashCode());
        result = prime * result + ((this.sourceFile == null) ? 0 : this.sourceFile.hashCode());
        result = prime * result + ((this.sourceLine == null) ? 0 : this.sourceLine.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Profiling (");

        sb.append(queryId);
        sb.append(", ").append(seq);
        sb.append(", ").append(state);
        sb.append(", ").append(duration);
        sb.append(", ").append(cpuUser);
        sb.append(", ").append(cpuSystem);
        sb.append(", ").append(contextVoluntary);
        sb.append(", ").append(contextInvoluntary);
        sb.append(", ").append(blockOpsIn);
        sb.append(", ").append(blockOpsOut);
        sb.append(", ").append(messagesSent);
        sb.append(", ").append(messagesReceived);
        sb.append(", ").append(pageFaultsMajor);
        sb.append(", ").append(pageFaultsMinor);
        sb.append(", ").append(swaps);
        sb.append(", ").append(sourceFunction);
        sb.append(", ").append(sourceFile);
        sb.append(", ").append(sourceLine);

        sb.append(")");
        return sb.toString();
    }
}
