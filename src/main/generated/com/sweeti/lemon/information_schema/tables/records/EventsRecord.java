/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.records;


import com.sweeti.lemon.information_schema.tables.Events;

import java.time.LocalDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsRecord extends TableRecordImpl<EventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
     */
    public EventsRecord setEventCatalog(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
     */
    public String getEventCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
     */
    public EventsRecord setEventSchema(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
     */
    public String getEventSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_NAME</code>.
     */
    public EventsRecord setEventName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_NAME</code>.
     */
    public String getEventName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.EVENTS.DEFINER</code>.
     */
    public EventsRecord setDefiner(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.DEFINER</code>.
     */
    public String getDefiner() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.EVENTS.TIME_ZONE</code>.
     */
    public EventsRecord setTimeZone(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.TIME_ZONE</code>.
     */
    public String getTimeZone() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_BODY</code>.
     */
    public EventsRecord setEventBody(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_BODY</code>.
     */
    public String getEventBody() {
        return (String) get(5);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
     */
    public EventsRecord setEventDefinition(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
     */
    public String getEventDefinition() {
        return (String) get(6);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
     */
    public EventsRecord setEventType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
     */
    public String getEventType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
     */
    public EventsRecord setExecuteAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
     */
    public LocalDateTime getExecuteAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
     */
    public EventsRecord setIntervalValue(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
     */
    public String getIntervalValue() {
        return (String) get(9);
    }

    /**
     * Setter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
     */
    public EventsRecord setIntervalField(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
     */
    public String getIntervalField() {
        return (String) get(10);
    }

    /**
     * Setter for <code>information_schema.EVENTS.SQL_MODE</code>.
     */
    public EventsRecord setSqlMode(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.SQL_MODE</code>.
     */
    public String getSqlMode() {
        return (String) get(11);
    }

    /**
     * Setter for <code>information_schema.EVENTS.STARTS</code>.
     */
    public EventsRecord setStarts(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.STARTS</code>.
     */
    public LocalDateTime getStarts() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>information_schema.EVENTS.ENDS</code>.
     */
    public EventsRecord setEnds(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.ENDS</code>.
     */
    public LocalDateTime getEnds() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>information_schema.EVENTS.STATUS</code>.
     */
    public EventsRecord setStatus(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(14);
    }

    /**
     * Setter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
     */
    public EventsRecord setOnCompletion(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
     */
    public String getOnCompletion() {
        return (String) get(15);
    }

    /**
     * Setter for <code>information_schema.EVENTS.CREATED</code>.
     */
    public EventsRecord setCreated(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.CREATED</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
     */
    public EventsRecord setLastAltered(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
     */
    public LocalDateTime getLastAltered() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
     */
    public EventsRecord setLastExecuted(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
     */
    public LocalDateTime getLastExecuted() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
     */
    public EventsRecord setEventComment(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
     */
    public String getEventComment() {
        return (String) get(19);
    }

    /**
     * Setter for <code>information_schema.EVENTS.ORIGINATOR</code>.
     */
    public EventsRecord setOriginator(Long value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.ORIGINATOR</code>.
     */
    public Long getOriginator() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
     */
    public EventsRecord setCharacterSetClient(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
     */
    public String getCharacterSetClient() {
        return (String) get(21);
    }

    /**
     * Setter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
     */
    public EventsRecord setCollationConnection(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
     */
    public String getCollationConnection() {
        return (String) get(22);
    }

    /**
     * Setter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
     */
    public EventsRecord setDatabaseCollation(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
     */
    public String getDatabaseCollation() {
        return (String) get(23);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsRecord
     */
    public EventsRecord() {
        super(Events.EVENTS);
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(String eventCatalog, String eventSchema, String eventName, String definer, String timeZone, String eventBody, String eventDefinition, String eventType, LocalDateTime executeAt, String intervalValue, String intervalField, String sqlMode, LocalDateTime starts, LocalDateTime ends, String status, String onCompletion, LocalDateTime created, LocalDateTime lastAltered, LocalDateTime lastExecuted, String eventComment, Long originator, String characterSetClient, String collationConnection, String databaseCollation) {
        super(Events.EVENTS);

        setEventCatalog(eventCatalog);
        setEventSchema(eventSchema);
        setEventName(eventName);
        setDefiner(definer);
        setTimeZone(timeZone);
        setEventBody(eventBody);
        setEventDefinition(eventDefinition);
        setEventType(eventType);
        setExecuteAt(executeAt);
        setIntervalValue(intervalValue);
        setIntervalField(intervalField);
        setSqlMode(sqlMode);
        setStarts(starts);
        setEnds(ends);
        setStatus(status);
        setOnCompletion(onCompletion);
        setCreated(created);
        setLastAltered(lastAltered);
        setLastExecuted(lastExecuted);
        setEventComment(eventComment);
        setOriginator(originator);
        setCharacterSetClient(characterSetClient);
        setCollationConnection(collationConnection);
        setDatabaseCollation(databaseCollation);
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(com.sweeti.lemon.information_schema.tables.pojos.Events value) {
        super(Events.EVENTS);

        if (value != null) {
            setEventCatalog(value.getEventCatalog());
            setEventSchema(value.getEventSchema());
            setEventName(value.getEventName());
            setDefiner(value.getDefiner());
            setTimeZone(value.getTimeZone());
            setEventBody(value.getEventBody());
            setEventDefinition(value.getEventDefinition());
            setEventType(value.getEventType());
            setExecuteAt(value.getExecuteAt());
            setIntervalValue(value.getIntervalValue());
            setIntervalField(value.getIntervalField());
            setSqlMode(value.getSqlMode());
            setStarts(value.getStarts());
            setEnds(value.getEnds());
            setStatus(value.getStatus());
            setOnCompletion(value.getOnCompletion());
            setCreated(value.getCreated());
            setLastAltered(value.getLastAltered());
            setLastExecuted(value.getLastExecuted());
            setEventComment(value.getEventComment());
            setOriginator(value.getOriginator());
            setCharacterSetClient(value.getCharacterSetClient());
            setCollationConnection(value.getCollationConnection());
            setDatabaseCollation(value.getDatabaseCollation());
        }
    }
}
