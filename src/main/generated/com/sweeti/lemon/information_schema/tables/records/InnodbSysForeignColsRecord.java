/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.records;


import com.sweeti.lemon.information_schema.tables.InnodbSysForeignCols;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysForeignColsRecord extends TableRecordImpl<InnodbSysForeignColsRecord> implements Record4<String, String, String, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN_COLS.ID</code>.
     */
    public InnodbSysForeignColsRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN_COLS.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.INNODB_SYS_FOREIGN_COLS.FOR_COL_NAME</code>.
     */
    public InnodbSysForeignColsRecord setForColName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_SYS_FOREIGN_COLS.FOR_COL_NAME</code>.
     */
    public String getForColName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.INNODB_SYS_FOREIGN_COLS.REF_COL_NAME</code>.
     */
    public InnodbSysForeignColsRecord setRefColName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_SYS_FOREIGN_COLS.REF_COL_NAME</code>.
     */
    public String getRefColName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN_COLS.POS</code>.
     */
    public InnodbSysForeignColsRecord setPos(UInteger value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN_COLS.POS</code>.
     */
    public UInteger getPos() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS.ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS.FOR_COL_NAME;
    }

    @Override
    public Field<String> field3() {
        return InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS.REF_COL_NAME;
    }

    @Override
    public Field<UInteger> field4() {
        return InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS.POS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getForColName();
    }

    @Override
    public String component3() {
        return getRefColName();
    }

    @Override
    public UInteger component4() {
        return getPos();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getForColName();
    }

    @Override
    public String value3() {
        return getRefColName();
    }

    @Override
    public UInteger value4() {
        return getPos();
    }

    @Override
    public InnodbSysForeignColsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public InnodbSysForeignColsRecord value2(String value) {
        setForColName(value);
        return this;
    }

    @Override
    public InnodbSysForeignColsRecord value3(String value) {
        setRefColName(value);
        return this;
    }

    @Override
    public InnodbSysForeignColsRecord value4(UInteger value) {
        setPos(value);
        return this;
    }

    @Override
    public InnodbSysForeignColsRecord values(String value1, String value2, String value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbSysForeignColsRecord
     */
    public InnodbSysForeignColsRecord() {
        super(InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS);
    }

    /**
     * Create a detached, initialised InnodbSysForeignColsRecord
     */
    public InnodbSysForeignColsRecord(String id, String forColName, String refColName, UInteger pos) {
        super(InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS);

        setId(id);
        setForColName(forColName);
        setRefColName(refColName);
        setPos(pos);
    }

    /**
     * Create a detached, initialised InnodbSysForeignColsRecord
     */
    public InnodbSysForeignColsRecord(com.sweeti.lemon.information_schema.tables.pojos.InnodbSysForeignCols value) {
        super(InnodbSysForeignCols.INNODB_SYS_FOREIGN_COLS);

        if (value != null) {
            setId(value.getId());
            setForColName(value.getForColName());
            setRefColName(value.getRefColName());
            setPos(value.getPos());
        }
    }
}
