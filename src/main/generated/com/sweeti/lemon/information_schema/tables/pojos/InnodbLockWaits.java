/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbLockWaits implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong requestingTrxId;
    private final String requestedLockId;
    private final ULong blockingTrxId;
    private final String blockingLockId;

    public InnodbLockWaits(InnodbLockWaits value) {
        this.requestingTrxId = value.requestingTrxId;
        this.requestedLockId = value.requestedLockId;
        this.blockingTrxId = value.blockingTrxId;
        this.blockingLockId = value.blockingLockId;
    }

    public InnodbLockWaits(
        ULong requestingTrxId,
        String requestedLockId,
        ULong blockingTrxId,
        String blockingLockId
    ) {
        this.requestingTrxId = requestingTrxId;
        this.requestedLockId = requestedLockId;
        this.blockingTrxId = blockingTrxId;
        this.blockingLockId = blockingLockId;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.requesting_trx_id</code>.
     */
    public ULong getRequestingTrxId() {
        return this.requestingTrxId;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.requested_lock_id</code>.
     */
    public String getRequestedLockId() {
        return this.requestedLockId;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_trx_id</code>.
     */
    public ULong getBlockingTrxId() {
        return this.blockingTrxId;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_LOCK_WAITS.blocking_lock_id</code>.
     */
    public String getBlockingLockId() {
        return this.blockingLockId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InnodbLockWaits other = (InnodbLockWaits) obj;
        if (this.requestingTrxId == null) {
            if (other.requestingTrxId != null)
                return false;
        }
        else if (!this.requestingTrxId.equals(other.requestingTrxId))
            return false;
        if (this.requestedLockId == null) {
            if (other.requestedLockId != null)
                return false;
        }
        else if (!this.requestedLockId.equals(other.requestedLockId))
            return false;
        if (this.blockingTrxId == null) {
            if (other.blockingTrxId != null)
                return false;
        }
        else if (!this.blockingTrxId.equals(other.blockingTrxId))
            return false;
        if (this.blockingLockId == null) {
            if (other.blockingLockId != null)
                return false;
        }
        else if (!this.blockingLockId.equals(other.blockingLockId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.requestingTrxId == null) ? 0 : this.requestingTrxId.hashCode());
        result = prime * result + ((this.requestedLockId == null) ? 0 : this.requestedLockId.hashCode());
        result = prime * result + ((this.blockingTrxId == null) ? 0 : this.blockingTrxId.hashCode());
        result = prime * result + ((this.blockingLockId == null) ? 0 : this.blockingLockId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbLockWaits (");

        sb.append(requestingTrxId);
        sb.append(", ").append(requestedLockId);
        sb.append(", ").append(blockingTrxId);
        sb.append(", ").append(blockingLockId);

        sb.append(")");
        return sb.toString();
    }
}
