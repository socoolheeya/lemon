/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Processlist implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String user;
    private final String host;
    private final String db;
    private final String command;
    private final Integer time;
    private final String state;
    private final String info;
    private final BigDecimal timeMs;
    private final Byte stage;
    private final Byte maxStage;
    private final BigDecimal progress;
    private final Long memoryUsed;
    private final Long maxMemoryUsed;
    private final Integer examinedRows;
    private final Long queryId;
    private final byte[] infoBinary;
    private final Long tid;

    public Processlist(Processlist value) {
        this.id = value.id;
        this.user = value.user;
        this.host = value.host;
        this.db = value.db;
        this.command = value.command;
        this.time = value.time;
        this.state = value.state;
        this.info = value.info;
        this.timeMs = value.timeMs;
        this.stage = value.stage;
        this.maxStage = value.maxStage;
        this.progress = value.progress;
        this.memoryUsed = value.memoryUsed;
        this.maxMemoryUsed = value.maxMemoryUsed;
        this.examinedRows = value.examinedRows;
        this.queryId = value.queryId;
        this.infoBinary = value.infoBinary;
        this.tid = value.tid;
    }

    public Processlist(
        Long id,
        String user,
        String host,
        String db,
        String command,
        Integer time,
        String state,
        String info,
        BigDecimal timeMs,
        Byte stage,
        Byte maxStage,
        BigDecimal progress,
        Long memoryUsed,
        Long maxMemoryUsed,
        Integer examinedRows,
        Long queryId,
        byte[] infoBinary,
        Long tid
    ) {
        this.id = id;
        this.user = user;
        this.host = host;
        this.db = db;
        this.command = command;
        this.time = time;
        this.state = state;
        this.info = info;
        this.timeMs = timeMs;
        this.stage = stage;
        this.maxStage = maxStage;
        this.progress = progress;
        this.memoryUsed = memoryUsed;
        this.maxMemoryUsed = maxMemoryUsed;
        this.examinedRows = examinedRows;
        this.queryId = queryId;
        this.infoBinary = infoBinary;
        this.tid = tid;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.ID</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.USER</code>.
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.HOST</code>.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.DB</code>.
     */
    public String getDb() {
        return this.db;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.COMMAND</code>.
     */
    public String getCommand() {
        return this.command;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TIME</code>.
     */
    public Integer getTime() {
        return this.time;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.STATE</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.INFO</code>.
     */
    public String getInfo() {
        return this.info;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TIME_MS</code>.
     */
    public BigDecimal getTimeMs() {
        return this.timeMs;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.STAGE</code>.
     */
    public Byte getStage() {
        return this.stage;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MAX_STAGE</code>.
     */
    public Byte getMaxStage() {
        return this.maxStage;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.PROGRESS</code>.
     */
    public BigDecimal getProgress() {
        return this.progress;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MEMORY_USED</code>.
     */
    public Long getMemoryUsed() {
        return this.memoryUsed;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MAX_MEMORY_USED</code>.
     */
    public Long getMaxMemoryUsed() {
        return this.maxMemoryUsed;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.EXAMINED_ROWS</code>.
     */
    public Integer getExaminedRows() {
        return this.examinedRows;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.QUERY_ID</code>.
     */
    public Long getQueryId() {
        return this.queryId;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.INFO_BINARY</code>.
     */
    public byte[] getInfoBinary() {
        return this.infoBinary;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TID</code>.
     */
    public Long getTid() {
        return this.tid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Processlist other = (Processlist) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.user == null) {
            if (other.user != null)
                return false;
        }
        else if (!this.user.equals(other.user))
            return false;
        if (this.host == null) {
            if (other.host != null)
                return false;
        }
        else if (!this.host.equals(other.host))
            return false;
        if (this.db == null) {
            if (other.db != null)
                return false;
        }
        else if (!this.db.equals(other.db))
            return false;
        if (this.command == null) {
            if (other.command != null)
                return false;
        }
        else if (!this.command.equals(other.command))
            return false;
        if (this.time == null) {
            if (other.time != null)
                return false;
        }
        else if (!this.time.equals(other.time))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.info == null) {
            if (other.info != null)
                return false;
        }
        else if (!this.info.equals(other.info))
            return false;
        if (this.timeMs == null) {
            if (other.timeMs != null)
                return false;
        }
        else if (!this.timeMs.equals(other.timeMs))
            return false;
        if (this.stage == null) {
            if (other.stage != null)
                return false;
        }
        else if (!this.stage.equals(other.stage))
            return false;
        if (this.maxStage == null) {
            if (other.maxStage != null)
                return false;
        }
        else if (!this.maxStage.equals(other.maxStage))
            return false;
        if (this.progress == null) {
            if (other.progress != null)
                return false;
        }
        else if (!this.progress.equals(other.progress))
            return false;
        if (this.memoryUsed == null) {
            if (other.memoryUsed != null)
                return false;
        }
        else if (!this.memoryUsed.equals(other.memoryUsed))
            return false;
        if (this.maxMemoryUsed == null) {
            if (other.maxMemoryUsed != null)
                return false;
        }
        else if (!this.maxMemoryUsed.equals(other.maxMemoryUsed))
            return false;
        if (this.examinedRows == null) {
            if (other.examinedRows != null)
                return false;
        }
        else if (!this.examinedRows.equals(other.examinedRows))
            return false;
        if (this.queryId == null) {
            if (other.queryId != null)
                return false;
        }
        else if (!this.queryId.equals(other.queryId))
            return false;
        if (this.infoBinary == null) {
            if (other.infoBinary != null)
                return false;
        }
        else if (!Arrays.equals(this.infoBinary, other.infoBinary))
            return false;
        if (this.tid == null) {
            if (other.tid != null)
                return false;
        }
        else if (!this.tid.equals(other.tid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.user == null) ? 0 : this.user.hashCode());
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.db == null) ? 0 : this.db.hashCode());
        result = prime * result + ((this.command == null) ? 0 : this.command.hashCode());
        result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.info == null) ? 0 : this.info.hashCode());
        result = prime * result + ((this.timeMs == null) ? 0 : this.timeMs.hashCode());
        result = prime * result + ((this.stage == null) ? 0 : this.stage.hashCode());
        result = prime * result + ((this.maxStage == null) ? 0 : this.maxStage.hashCode());
        result = prime * result + ((this.progress == null) ? 0 : this.progress.hashCode());
        result = prime * result + ((this.memoryUsed == null) ? 0 : this.memoryUsed.hashCode());
        result = prime * result + ((this.maxMemoryUsed == null) ? 0 : this.maxMemoryUsed.hashCode());
        result = prime * result + ((this.examinedRows == null) ? 0 : this.examinedRows.hashCode());
        result = prime * result + ((this.queryId == null) ? 0 : this.queryId.hashCode());
        result = prime * result + ((this.infoBinary == null) ? 0 : Arrays.hashCode(this.infoBinary));
        result = prime * result + ((this.tid == null) ? 0 : this.tid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Processlist (");

        sb.append(id);
        sb.append(", ").append(user);
        sb.append(", ").append(host);
        sb.append(", ").append(db);
        sb.append(", ").append(command);
        sb.append(", ").append(time);
        sb.append(", ").append(state);
        sb.append(", ").append(info);
        sb.append(", ").append(timeMs);
        sb.append(", ").append(stage);
        sb.append(", ").append(maxStage);
        sb.append(", ").append(progress);
        sb.append(", ").append(memoryUsed);
        sb.append(", ").append(maxMemoryUsed);
        sb.append(", ").append(examinedRows);
        sb.append(", ").append(queryId);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(tid);

        sb.append(")");
        return sb.toString();
    }
}
