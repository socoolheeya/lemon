/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysIndexes implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong indexId;
    private final String name;
    private final ULong tableId;
    private final Integer type;
    private final Integer nFields;
    private final Integer pageNo;
    private final Integer space;
    private final Integer mergeThreshold;

    public InnodbSysIndexes(InnodbSysIndexes value) {
        this.indexId = value.indexId;
        this.name = value.name;
        this.tableId = value.tableId;
        this.type = value.type;
        this.nFields = value.nFields;
        this.pageNo = value.pageNo;
        this.space = value.space;
        this.mergeThreshold = value.mergeThreshold;
    }

    public InnodbSysIndexes(
        ULong indexId,
        String name,
        ULong tableId,
        Integer type,
        Integer nFields,
        Integer pageNo,
        Integer space,
        Integer mergeThreshold
    ) {
        this.indexId = indexId;
        this.name = name;
        this.tableId = tableId;
        this.type = type;
        this.nFields = nFields;
        this.pageNo = pageNo;
        this.space = space;
        this.mergeThreshold = mergeThreshold;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.INDEX_ID</code>.
     */
    public ULong getIndexId() {
        return this.indexId;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.NAME</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.TABLE_ID</code>.
     */
    public ULong getTableId() {
        return this.tableId;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.TYPE</code>.
     */
    public Integer getType() {
        return this.type;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.N_FIELDS</code>.
     */
    public Integer getNFields() {
        return this.nFields;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.PAGE_NO</code>.
     */
    public Integer getPageNo() {
        return this.pageNo;
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_INDEXES.SPACE</code>.
     */
    public Integer getSpace() {
        return this.space;
    }

    /**
     * Getter for
     * <code>information_schema.INNODB_SYS_INDEXES.MERGE_THRESHOLD</code>.
     */
    public Integer getMergeThreshold() {
        return this.mergeThreshold;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InnodbSysIndexes other = (InnodbSysIndexes) obj;
        if (this.indexId == null) {
            if (other.indexId != null)
                return false;
        }
        else if (!this.indexId.equals(other.indexId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.tableId == null) {
            if (other.tableId != null)
                return false;
        }
        else if (!this.tableId.equals(other.tableId))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.nFields == null) {
            if (other.nFields != null)
                return false;
        }
        else if (!this.nFields.equals(other.nFields))
            return false;
        if (this.pageNo == null) {
            if (other.pageNo != null)
                return false;
        }
        else if (!this.pageNo.equals(other.pageNo))
            return false;
        if (this.space == null) {
            if (other.space != null)
                return false;
        }
        else if (!this.space.equals(other.space))
            return false;
        if (this.mergeThreshold == null) {
            if (other.mergeThreshold != null)
                return false;
        }
        else if (!this.mergeThreshold.equals(other.mergeThreshold))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.indexId == null) ? 0 : this.indexId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.tableId == null) ? 0 : this.tableId.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.nFields == null) ? 0 : this.nFields.hashCode());
        result = prime * result + ((this.pageNo == null) ? 0 : this.pageNo.hashCode());
        result = prime * result + ((this.space == null) ? 0 : this.space.hashCode());
        result = prime * result + ((this.mergeThreshold == null) ? 0 : this.mergeThreshold.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbSysIndexes (");

        sb.append(indexId);
        sb.append(", ").append(name);
        sb.append(", ").append(tableId);
        sb.append(", ").append(type);
        sb.append(", ").append(nFields);
        sb.append(", ").append(pageNo);
        sb.append(", ").append(space);
        sb.append(", ").append(mergeThreshold);

        sb.append(")");
        return sb.toString();
    }
}
