/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThreadPoolQueues implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer groupId;
    private final Integer position;
    private final Integer priority;
    private final ULong connectionId;
    private final Long queueingTimeMicroseconds;

    public ThreadPoolQueues(ThreadPoolQueues value) {
        this.groupId = value.groupId;
        this.position = value.position;
        this.priority = value.priority;
        this.connectionId = value.connectionId;
        this.queueingTimeMicroseconds = value.queueingTimeMicroseconds;
    }

    public ThreadPoolQueues(
        Integer groupId,
        Integer position,
        Integer priority,
        ULong connectionId,
        Long queueingTimeMicroseconds
    ) {
        this.groupId = groupId;
        this.position = position;
        this.priority = priority;
        this.connectionId = connectionId;
        this.queueingTimeMicroseconds = queueingTimeMicroseconds;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_QUEUES.GROUP_ID</code>.
     */
    public Integer getGroupId() {
        return this.groupId;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_QUEUES.POSITION</code>.
     */
    public Integer getPosition() {
        return this.position;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_QUEUES.PRIORITY</code>.
     */
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_QUEUES.CONNECTION_ID</code>.
     */
    public ULong getConnectionId() {
        return this.connectionId;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_QUEUES.QUEUEING_TIME_MICROSECONDS</code>.
     */
    public Long getQueueingTimeMicroseconds() {
        return this.queueingTimeMicroseconds;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ThreadPoolQueues other = (ThreadPoolQueues) obj;
        if (this.groupId == null) {
            if (other.groupId != null)
                return false;
        }
        else if (!this.groupId.equals(other.groupId))
            return false;
        if (this.position == null) {
            if (other.position != null)
                return false;
        }
        else if (!this.position.equals(other.position))
            return false;
        if (this.priority == null) {
            if (other.priority != null)
                return false;
        }
        else if (!this.priority.equals(other.priority))
            return false;
        if (this.connectionId == null) {
            if (other.connectionId != null)
                return false;
        }
        else if (!this.connectionId.equals(other.connectionId))
            return false;
        if (this.queueingTimeMicroseconds == null) {
            if (other.queueingTimeMicroseconds != null)
                return false;
        }
        else if (!this.queueingTimeMicroseconds.equals(other.queueingTimeMicroseconds))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.groupId == null) ? 0 : this.groupId.hashCode());
        result = prime * result + ((this.position == null) ? 0 : this.position.hashCode());
        result = prime * result + ((this.priority == null) ? 0 : this.priority.hashCode());
        result = prime * result + ((this.connectionId == null) ? 0 : this.connectionId.hashCode());
        result = prime * result + ((this.queueingTimeMicroseconds == null) ? 0 : this.queueingTimeMicroseconds.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ThreadPoolQueues (");

        sb.append(groupId);
        sb.append(", ").append(position);
        sb.append(", ").append(priority);
        sb.append(", ").append(connectionId);
        sb.append(", ").append(queueingTimeMicroseconds);

        sb.append(")");
        return sb.toString();
    }
}
