/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tablespaces implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String tablespaceName;
    private final String engine;
    private final String tablespaceType;
    private final String logfileGroupName;
    private final ULong extentSize;
    private final ULong autoextendSize;
    private final ULong maximumSize;
    private final ULong nodegroupId;
    private final String tablespaceComment;

    public Tablespaces(Tablespaces value) {
        this.tablespaceName = value.tablespaceName;
        this.engine = value.engine;
        this.tablespaceType = value.tablespaceType;
        this.logfileGroupName = value.logfileGroupName;
        this.extentSize = value.extentSize;
        this.autoextendSize = value.autoextendSize;
        this.maximumSize = value.maximumSize;
        this.nodegroupId = value.nodegroupId;
        this.tablespaceComment = value.tablespaceComment;
    }

    public Tablespaces(
        String tablespaceName,
        String engine,
        String tablespaceType,
        String logfileGroupName,
        ULong extentSize,
        ULong autoextendSize,
        ULong maximumSize,
        ULong nodegroupId,
        String tablespaceComment
    ) {
        this.tablespaceName = tablespaceName;
        this.engine = engine;
        this.tablespaceType = tablespaceType;
        this.logfileGroupName = logfileGroupName;
        this.extentSize = extentSize;
        this.autoextendSize = autoextendSize;
        this.maximumSize = maximumSize;
        this.nodegroupId = nodegroupId;
        this.tablespaceComment = tablespaceComment;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.TABLESPACE_NAME</code>.
     */
    public String getTablespaceName() {
        return this.tablespaceName;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.ENGINE</code>.
     */
    public String getEngine() {
        return this.engine;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.TABLESPACE_TYPE</code>.
     */
    public String getTablespaceType() {
        return this.tablespaceType;
    }

    /**
     * Getter for
     * <code>information_schema.TABLESPACES.LOGFILE_GROUP_NAME</code>.
     */
    public String getLogfileGroupName() {
        return this.logfileGroupName;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.EXTENT_SIZE</code>.
     */
    public ULong getExtentSize() {
        return this.extentSize;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.AUTOEXTEND_SIZE</code>.
     */
    public ULong getAutoextendSize() {
        return this.autoextendSize;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.MAXIMUM_SIZE</code>.
     */
    public ULong getMaximumSize() {
        return this.maximumSize;
    }

    /**
     * Getter for <code>information_schema.TABLESPACES.NODEGROUP_ID</code>.
     */
    public ULong getNodegroupId() {
        return this.nodegroupId;
    }

    /**
     * Getter for
     * <code>information_schema.TABLESPACES.TABLESPACE_COMMENT</code>.
     */
    public String getTablespaceComment() {
        return this.tablespaceComment;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Tablespaces other = (Tablespaces) obj;
        if (this.tablespaceName == null) {
            if (other.tablespaceName != null)
                return false;
        }
        else if (!this.tablespaceName.equals(other.tablespaceName))
            return false;
        if (this.engine == null) {
            if (other.engine != null)
                return false;
        }
        else if (!this.engine.equals(other.engine))
            return false;
        if (this.tablespaceType == null) {
            if (other.tablespaceType != null)
                return false;
        }
        else if (!this.tablespaceType.equals(other.tablespaceType))
            return false;
        if (this.logfileGroupName == null) {
            if (other.logfileGroupName != null)
                return false;
        }
        else if (!this.logfileGroupName.equals(other.logfileGroupName))
            return false;
        if (this.extentSize == null) {
            if (other.extentSize != null)
                return false;
        }
        else if (!this.extentSize.equals(other.extentSize))
            return false;
        if (this.autoextendSize == null) {
            if (other.autoextendSize != null)
                return false;
        }
        else if (!this.autoextendSize.equals(other.autoextendSize))
            return false;
        if (this.maximumSize == null) {
            if (other.maximumSize != null)
                return false;
        }
        else if (!this.maximumSize.equals(other.maximumSize))
            return false;
        if (this.nodegroupId == null) {
            if (other.nodegroupId != null)
                return false;
        }
        else if (!this.nodegroupId.equals(other.nodegroupId))
            return false;
        if (this.tablespaceComment == null) {
            if (other.tablespaceComment != null)
                return false;
        }
        else if (!this.tablespaceComment.equals(other.tablespaceComment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tablespaceName == null) ? 0 : this.tablespaceName.hashCode());
        result = prime * result + ((this.engine == null) ? 0 : this.engine.hashCode());
        result = prime * result + ((this.tablespaceType == null) ? 0 : this.tablespaceType.hashCode());
        result = prime * result + ((this.logfileGroupName == null) ? 0 : this.logfileGroupName.hashCode());
        result = prime * result + ((this.extentSize == null) ? 0 : this.extentSize.hashCode());
        result = prime * result + ((this.autoextendSize == null) ? 0 : this.autoextendSize.hashCode());
        result = prime * result + ((this.maximumSize == null) ? 0 : this.maximumSize.hashCode());
        result = prime * result + ((this.nodegroupId == null) ? 0 : this.nodegroupId.hashCode());
        result = prime * result + ((this.tablespaceComment == null) ? 0 : this.tablespaceComment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Tablespaces (");

        sb.append(tablespaceName);
        sb.append(", ").append(engine);
        sb.append(", ").append(tablespaceType);
        sb.append(", ").append(logfileGroupName);
        sb.append(", ").append(extentSize);
        sb.append(", ").append(autoextendSize);
        sb.append(", ").append(maximumSize);
        sb.append(", ").append(nodegroupId);
        sb.append(", ").append(tablespaceComment);

        sb.append(")");
        return sb.toString();
    }
}
