/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.records;


import com.sweeti.lemon.information_schema.tables.ThreadPoolGroups;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThreadPoolGroupsRecord extends TableRecordImpl<ThreadPoolGroupsRecord> implements Record8<Integer, Integer, Integer, Integer, Integer, Integer, Byte, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.THREAD_POOL_GROUPS.GROUP_ID</code>.
     */
    public ThreadPoolGroupsRecord setGroupId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_GROUPS.GROUP_ID</code>.
     */
    public Integer getGroupId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.THREAD_POOL_GROUPS.CONNECTIONS</code>.
     */
    public ThreadPoolGroupsRecord setConnections(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_GROUPS.CONNECTIONS</code>.
     */
    public Integer getConnections() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>information_schema.THREAD_POOL_GROUPS.THREADS</code>.
     */
    public ThreadPoolGroupsRecord setThreads(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_GROUPS.THREADS</code>.
     */
    public Integer getThreads() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.THREAD_POOL_GROUPS.ACTIVE_THREADS</code>.
     */
    public ThreadPoolGroupsRecord setActiveThreads(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_GROUPS.ACTIVE_THREADS</code>.
     */
    public Integer getActiveThreads() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.THREAD_POOL_GROUPS.STANDBY_THREADS</code>.
     */
    public ThreadPoolGroupsRecord setStandbyThreads(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_GROUPS.STANDBY_THREADS</code>.
     */
    public Integer getStandbyThreads() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.THREAD_POOL_GROUPS.QUEUE_LENGTH</code>.
     */
    public ThreadPoolGroupsRecord setQueueLength(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_GROUPS.QUEUE_LENGTH</code>.
     */
    public Integer getQueueLength() {
        return (Integer) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.THREAD_POOL_GROUPS.HAS_LISTENER</code>.
     */
    public ThreadPoolGroupsRecord setHasListener(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.THREAD_POOL_GROUPS.HAS_LISTENER</code>.
     */
    public Byte getHasListener() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>information_schema.THREAD_POOL_GROUPS.IS_STALLED</code>.
     */
    public ThreadPoolGroupsRecord setIsStalled(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.THREAD_POOL_GROUPS.IS_STALLED</code>.
     */
    public Byte getIsStalled() {
        return (Byte) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, Integer, Integer, Byte, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, Integer, Integer, Integer, Byte, Byte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.GROUP_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.CONNECTIONS;
    }

    @Override
    public Field<Integer> field3() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.THREADS;
    }

    @Override
    public Field<Integer> field4() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.ACTIVE_THREADS;
    }

    @Override
    public Field<Integer> field5() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.STANDBY_THREADS;
    }

    @Override
    public Field<Integer> field6() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.QUEUE_LENGTH;
    }

    @Override
    public Field<Byte> field7() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.HAS_LISTENER;
    }

    @Override
    public Field<Byte> field8() {
        return ThreadPoolGroups.THREAD_POOL_GROUPS.IS_STALLED;
    }

    @Override
    public Integer component1() {
        return getGroupId();
    }

    @Override
    public Integer component2() {
        return getConnections();
    }

    @Override
    public Integer component3() {
        return getThreads();
    }

    @Override
    public Integer component4() {
        return getActiveThreads();
    }

    @Override
    public Integer component5() {
        return getStandbyThreads();
    }

    @Override
    public Integer component6() {
        return getQueueLength();
    }

    @Override
    public Byte component7() {
        return getHasListener();
    }

    @Override
    public Byte component8() {
        return getIsStalled();
    }

    @Override
    public Integer value1() {
        return getGroupId();
    }

    @Override
    public Integer value2() {
        return getConnections();
    }

    @Override
    public Integer value3() {
        return getThreads();
    }

    @Override
    public Integer value4() {
        return getActiveThreads();
    }

    @Override
    public Integer value5() {
        return getStandbyThreads();
    }

    @Override
    public Integer value6() {
        return getQueueLength();
    }

    @Override
    public Byte value7() {
        return getHasListener();
    }

    @Override
    public Byte value8() {
        return getIsStalled();
    }

    @Override
    public ThreadPoolGroupsRecord value1(Integer value) {
        setGroupId(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value2(Integer value) {
        setConnections(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value3(Integer value) {
        setThreads(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value4(Integer value) {
        setActiveThreads(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value5(Integer value) {
        setStandbyThreads(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value6(Integer value) {
        setQueueLength(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value7(Byte value) {
        setHasListener(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord value8(Byte value) {
        setIsStalled(value);
        return this;
    }

    @Override
    public ThreadPoolGroupsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Byte value7, Byte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ThreadPoolGroupsRecord
     */
    public ThreadPoolGroupsRecord() {
        super(ThreadPoolGroups.THREAD_POOL_GROUPS);
    }

    /**
     * Create a detached, initialised ThreadPoolGroupsRecord
     */
    public ThreadPoolGroupsRecord(Integer groupId, Integer connections, Integer threads, Integer activeThreads, Integer standbyThreads, Integer queueLength, Byte hasListener, Byte isStalled) {
        super(ThreadPoolGroups.THREAD_POOL_GROUPS);

        setGroupId(groupId);
        setConnections(connections);
        setThreads(threads);
        setActiveThreads(activeThreads);
        setStandbyThreads(standbyThreads);
        setQueueLength(queueLength);
        setHasListener(hasListener);
        setIsStalled(isStalled);
    }

    /**
     * Create a detached, initialised ThreadPoolGroupsRecord
     */
    public ThreadPoolGroupsRecord(com.sweeti.lemon.information_schema.tables.pojos.ThreadPoolGroups value) {
        super(ThreadPoolGroups.THREAD_POOL_GROUPS);

        if (value != null) {
            setGroupId(value.getGroupId());
            setConnections(value.getConnections());
            setThreads(value.getThreads());
            setActiveThreads(value.getActiveThreads());
            setStandbyThreads(value.getStandbyThreads());
            setQueueLength(value.getQueueLength());
            setHasListener(value.getHasListener());
            setIsStalled(value.getIsStalled());
        }
    }
}
