/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.records;


import com.sweeti.lemon.information_schema.tables.Processlist;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcesslistRecord extends TableRecordImpl<ProcesslistRecord> implements Record18<Long, String, String, String, String, Integer, String, String, BigDecimal, Byte, Byte, BigDecimal, Long, Long, Integer, Long, byte[], Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.PROCESSLIST.ID</code>.
     */
    public ProcesslistRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.USER</code>.
     */
    public ProcesslistRecord setUser(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.USER</code>.
     */
    public String getUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.HOST</code>.
     */
    public ProcesslistRecord setHost(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.HOST</code>.
     */
    public String getHost() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.DB</code>.
     */
    public ProcesslistRecord setDb(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.DB</code>.
     */
    public String getDb() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.COMMAND</code>.
     */
    public ProcesslistRecord setCommand(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.COMMAND</code>.
     */
    public String getCommand() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.TIME</code>.
     */
    public ProcesslistRecord setTime(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TIME</code>.
     */
    public Integer getTime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.STATE</code>.
     */
    public ProcesslistRecord setState(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.STATE</code>.
     */
    public String getState() {
        return (String) get(6);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.INFO</code>.
     */
    public ProcesslistRecord setInfo(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.INFO</code>.
     */
    public String getInfo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.TIME_MS</code>.
     */
    public ProcesslistRecord setTimeMs(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TIME_MS</code>.
     */
    public BigDecimal getTimeMs() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.STAGE</code>.
     */
    public ProcesslistRecord setStage(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.STAGE</code>.
     */
    public Byte getStage() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.MAX_STAGE</code>.
     */
    public ProcesslistRecord setMaxStage(Byte value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MAX_STAGE</code>.
     */
    public Byte getMaxStage() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.PROGRESS</code>.
     */
    public ProcesslistRecord setProgress(BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.PROGRESS</code>.
     */
    public BigDecimal getProgress() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.MEMORY_USED</code>.
     */
    public ProcesslistRecord setMemoryUsed(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MEMORY_USED</code>.
     */
    public Long getMemoryUsed() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.MAX_MEMORY_USED</code>.
     */
    public ProcesslistRecord setMaxMemoryUsed(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.MAX_MEMORY_USED</code>.
     */
    public Long getMaxMemoryUsed() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.EXAMINED_ROWS</code>.
     */
    public ProcesslistRecord setExaminedRows(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.EXAMINED_ROWS</code>.
     */
    public Integer getExaminedRows() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.QUERY_ID</code>.
     */
    public ProcesslistRecord setQueryId(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.QUERY_ID</code>.
     */
    public Long getQueryId() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.INFO_BINARY</code>.
     */
    public ProcesslistRecord setInfoBinary(byte[] value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.INFO_BINARY</code>.
     */
    public byte[] getInfoBinary() {
        return (byte[]) get(16);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.TID</code>.
     */
    public ProcesslistRecord setTid(Long value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TID</code>.
     */
    public Long getTid() {
        return (Long) get(17);
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, String, String, String, String, Integer, String, String, BigDecimal, Byte, Byte, BigDecimal, Long, Long, Integer, Long, byte[], Long> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Long, String, String, String, String, Integer, String, String, BigDecimal, Byte, Byte, BigDecimal, Long, Long, Integer, Long, byte[], Long> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Processlist.PROCESSLIST.ID;
    }

    @Override
    public Field<String> field2() {
        return Processlist.PROCESSLIST.USER;
    }

    @Override
    public Field<String> field3() {
        return Processlist.PROCESSLIST.HOST;
    }

    @Override
    public Field<String> field4() {
        return Processlist.PROCESSLIST.DB;
    }

    @Override
    public Field<String> field5() {
        return Processlist.PROCESSLIST.COMMAND;
    }

    @Override
    public Field<Integer> field6() {
        return Processlist.PROCESSLIST.TIME;
    }

    @Override
    public Field<String> field7() {
        return Processlist.PROCESSLIST.STATE;
    }

    @Override
    public Field<String> field8() {
        return Processlist.PROCESSLIST.INFO;
    }

    @Override
    public Field<BigDecimal> field9() {
        return Processlist.PROCESSLIST.TIME_MS;
    }

    @Override
    public Field<Byte> field10() {
        return Processlist.PROCESSLIST.STAGE;
    }

    @Override
    public Field<Byte> field11() {
        return Processlist.PROCESSLIST.MAX_STAGE;
    }

    @Override
    public Field<BigDecimal> field12() {
        return Processlist.PROCESSLIST.PROGRESS;
    }

    @Override
    public Field<Long> field13() {
        return Processlist.PROCESSLIST.MEMORY_USED;
    }

    @Override
    public Field<Long> field14() {
        return Processlist.PROCESSLIST.MAX_MEMORY_USED;
    }

    @Override
    public Field<Integer> field15() {
        return Processlist.PROCESSLIST.EXAMINED_ROWS;
    }

    @Override
    public Field<Long> field16() {
        return Processlist.PROCESSLIST.QUERY_ID;
    }

    @Override
    public Field<byte[]> field17() {
        return Processlist.PROCESSLIST.INFO_BINARY;
    }

    @Override
    public Field<Long> field18() {
        return Processlist.PROCESSLIST.TID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUser();
    }

    @Override
    public String component3() {
        return getHost();
    }

    @Override
    public String component4() {
        return getDb();
    }

    @Override
    public String component5() {
        return getCommand();
    }

    @Override
    public Integer component6() {
        return getTime();
    }

    @Override
    public String component7() {
        return getState();
    }

    @Override
    public String component8() {
        return getInfo();
    }

    @Override
    public BigDecimal component9() {
        return getTimeMs();
    }

    @Override
    public Byte component10() {
        return getStage();
    }

    @Override
    public Byte component11() {
        return getMaxStage();
    }

    @Override
    public BigDecimal component12() {
        return getProgress();
    }

    @Override
    public Long component13() {
        return getMemoryUsed();
    }

    @Override
    public Long component14() {
        return getMaxMemoryUsed();
    }

    @Override
    public Integer component15() {
        return getExaminedRows();
    }

    @Override
    public Long component16() {
        return getQueryId();
    }

    @Override
    public byte[] component17() {
        return getInfoBinary();
    }

    @Override
    public Long component18() {
        return getTid();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUser();
    }

    @Override
    public String value3() {
        return getHost();
    }

    @Override
    public String value4() {
        return getDb();
    }

    @Override
    public String value5() {
        return getCommand();
    }

    @Override
    public Integer value6() {
        return getTime();
    }

    @Override
    public String value7() {
        return getState();
    }

    @Override
    public String value8() {
        return getInfo();
    }

    @Override
    public BigDecimal value9() {
        return getTimeMs();
    }

    @Override
    public Byte value10() {
        return getStage();
    }

    @Override
    public Byte value11() {
        return getMaxStage();
    }

    @Override
    public BigDecimal value12() {
        return getProgress();
    }

    @Override
    public Long value13() {
        return getMemoryUsed();
    }

    @Override
    public Long value14() {
        return getMaxMemoryUsed();
    }

    @Override
    public Integer value15() {
        return getExaminedRows();
    }

    @Override
    public Long value16() {
        return getQueryId();
    }

    @Override
    public byte[] value17() {
        return getInfoBinary();
    }

    @Override
    public Long value18() {
        return getTid();
    }

    @Override
    public ProcesslistRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProcesslistRecord value2(String value) {
        setUser(value);
        return this;
    }

    @Override
    public ProcesslistRecord value3(String value) {
        setHost(value);
        return this;
    }

    @Override
    public ProcesslistRecord value4(String value) {
        setDb(value);
        return this;
    }

    @Override
    public ProcesslistRecord value5(String value) {
        setCommand(value);
        return this;
    }

    @Override
    public ProcesslistRecord value6(Integer value) {
        setTime(value);
        return this;
    }

    @Override
    public ProcesslistRecord value7(String value) {
        setState(value);
        return this;
    }

    @Override
    public ProcesslistRecord value8(String value) {
        setInfo(value);
        return this;
    }

    @Override
    public ProcesslistRecord value9(BigDecimal value) {
        setTimeMs(value);
        return this;
    }

    @Override
    public ProcesslistRecord value10(Byte value) {
        setStage(value);
        return this;
    }

    @Override
    public ProcesslistRecord value11(Byte value) {
        setMaxStage(value);
        return this;
    }

    @Override
    public ProcesslistRecord value12(BigDecimal value) {
        setProgress(value);
        return this;
    }

    @Override
    public ProcesslistRecord value13(Long value) {
        setMemoryUsed(value);
        return this;
    }

    @Override
    public ProcesslistRecord value14(Long value) {
        setMaxMemoryUsed(value);
        return this;
    }

    @Override
    public ProcesslistRecord value15(Integer value) {
        setExaminedRows(value);
        return this;
    }

    @Override
    public ProcesslistRecord value16(Long value) {
        setQueryId(value);
        return this;
    }

    @Override
    public ProcesslistRecord value17(byte[] value) {
        setInfoBinary(value);
        return this;
    }

    @Override
    public ProcesslistRecord value18(Long value) {
        setTid(value);
        return this;
    }

    @Override
    public ProcesslistRecord values(Long value1, String value2, String value3, String value4, String value5, Integer value6, String value7, String value8, BigDecimal value9, Byte value10, Byte value11, BigDecimal value12, Long value13, Long value14, Integer value15, Long value16, byte[] value17, Long value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProcesslistRecord
     */
    public ProcesslistRecord() {
        super(Processlist.PROCESSLIST);
    }

    /**
     * Create a detached, initialised ProcesslistRecord
     */
    public ProcesslistRecord(Long id, String user, String host, String db, String command, Integer time, String state, String info, BigDecimal timeMs, Byte stage, Byte maxStage, BigDecimal progress, Long memoryUsed, Long maxMemoryUsed, Integer examinedRows, Long queryId, byte[] infoBinary, Long tid) {
        super(Processlist.PROCESSLIST);

        setId(id);
        setUser(user);
        setHost(host);
        setDb(db);
        setCommand(command);
        setTime(time);
        setState(state);
        setInfo(info);
        setTimeMs(timeMs);
        setStage(stage);
        setMaxStage(maxStage);
        setProgress(progress);
        setMemoryUsed(memoryUsed);
        setMaxMemoryUsed(maxMemoryUsed);
        setExaminedRows(examinedRows);
        setQueryId(queryId);
        setInfoBinary(infoBinary);
        setTid(tid);
    }

    /**
     * Create a detached, initialised ProcesslistRecord
     */
    public ProcesslistRecord(com.sweeti.lemon.information_schema.tables.pojos.Processlist value) {
        super(Processlist.PROCESSLIST);

        if (value != null) {
            setId(value.getId());
            setUser(value.getUser());
            setHost(value.getHost());
            setDb(value.getDb());
            setCommand(value.getCommand());
            setTime(value.getTime());
            setState(value.getState());
            setInfo(value.getInfo());
            setTimeMs(value.getTimeMs());
            setStage(value.getStage());
            setMaxStage(value.getMaxStage());
            setProgress(value.getProgress());
            setMemoryUsed(value.getMemoryUsed());
            setMaxMemoryUsed(value.getMaxMemoryUsed());
            setExaminedRows(value.getExaminedRows());
            setQueryId(value.getQueryId());
            setInfoBinary(value.getInfoBinary());
            setTid(value.getTid());
        }
    }
}
