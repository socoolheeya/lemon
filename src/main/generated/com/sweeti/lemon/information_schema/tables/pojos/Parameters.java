/*
 * This file is generated by jOOQ.
 */
package com.sweeti.lemon.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Parameters implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String specificCatalog;
    private final String specificSchema;
    private final String specificName;
    private final Integer ordinalPosition;
    private final String parameterMode;
    private final String parameterName;
    private final String dataType;
    private final Integer characterMaximumLength;
    private final Integer characterOctetLength;
    private final Integer numericPrecision;
    private final Integer numericScale;
    private final ULong datetimePrecision;
    private final String characterSetName;
    private final String collationName;
    private final String dtdIdentifier;
    private final String routineType;

    public Parameters(Parameters value) {
        this.specificCatalog = value.specificCatalog;
        this.specificSchema = value.specificSchema;
        this.specificName = value.specificName;
        this.ordinalPosition = value.ordinalPosition;
        this.parameterMode = value.parameterMode;
        this.parameterName = value.parameterName;
        this.dataType = value.dataType;
        this.characterMaximumLength = value.characterMaximumLength;
        this.characterOctetLength = value.characterOctetLength;
        this.numericPrecision = value.numericPrecision;
        this.numericScale = value.numericScale;
        this.datetimePrecision = value.datetimePrecision;
        this.characterSetName = value.characterSetName;
        this.collationName = value.collationName;
        this.dtdIdentifier = value.dtdIdentifier;
        this.routineType = value.routineType;
    }

    public Parameters(
        String specificCatalog,
        String specificSchema,
        String specificName,
        Integer ordinalPosition,
        String parameterMode,
        String parameterName,
        String dataType,
        Integer characterMaximumLength,
        Integer characterOctetLength,
        Integer numericPrecision,
        Integer numericScale,
        ULong datetimePrecision,
        String characterSetName,
        String collationName,
        String dtdIdentifier,
        String routineType
    ) {
        this.specificCatalog = specificCatalog;
        this.specificSchema = specificSchema;
        this.specificName = specificName;
        this.ordinalPosition = ordinalPosition;
        this.parameterMode = parameterMode;
        this.parameterName = parameterName;
        this.dataType = dataType;
        this.characterMaximumLength = characterMaximumLength;
        this.characterOctetLength = characterOctetLength;
        this.numericPrecision = numericPrecision;
        this.numericScale = numericScale;
        this.datetimePrecision = datetimePrecision;
        this.characterSetName = characterSetName;
        this.collationName = collationName;
        this.dtdIdentifier = dtdIdentifier;
        this.routineType = routineType;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.SPECIFIC_CATALOG</code>.
     */
    public String getSpecificCatalog() {
        return this.specificCatalog;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.SPECIFIC_SCHEMA</code>.
     */
    public String getSpecificSchema() {
        return this.specificSchema;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.SPECIFIC_NAME</code>.
     */
    public String getSpecificName() {
        return this.specificName;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.ORDINAL_POSITION</code>.
     */
    public Integer getOrdinalPosition() {
        return this.ordinalPosition;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.PARAMETER_MODE</code>.
     */
    public String getParameterMode() {
        return this.parameterMode;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.PARAMETER_NAME</code>.
     */
    public String getParameterName() {
        return this.parameterName;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.DATA_TYPE</code>.
     */
    public String getDataType() {
        return this.dataType;
    }

    /**
     * Getter for
     * <code>information_schema.PARAMETERS.CHARACTER_MAXIMUM_LENGTH</code>.
     */
    public Integer getCharacterMaximumLength() {
        return this.characterMaximumLength;
    }

    /**
     * Getter for
     * <code>information_schema.PARAMETERS.CHARACTER_OCTET_LENGTH</code>.
     */
    public Integer getCharacterOctetLength() {
        return this.characterOctetLength;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.NUMERIC_PRECISION</code>.
     */
    public Integer getNumericPrecision() {
        return this.numericPrecision;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.NUMERIC_SCALE</code>.
     */
    public Integer getNumericScale() {
        return this.numericScale;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.DATETIME_PRECISION</code>.
     */
    public ULong getDatetimePrecision() {
        return this.datetimePrecision;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.CHARACTER_SET_NAME</code>.
     */
    public String getCharacterSetName() {
        return this.characterSetName;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.COLLATION_NAME</code>.
     */
    public String getCollationName() {
        return this.collationName;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.DTD_IDENTIFIER</code>.
     */
    public String getDtdIdentifier() {
        return this.dtdIdentifier;
    }

    /**
     * Getter for <code>information_schema.PARAMETERS.ROUTINE_TYPE</code>.
     */
    public String getRoutineType() {
        return this.routineType;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Parameters other = (Parameters) obj;
        if (this.specificCatalog == null) {
            if (other.specificCatalog != null)
                return false;
        }
        else if (!this.specificCatalog.equals(other.specificCatalog))
            return false;
        if (this.specificSchema == null) {
            if (other.specificSchema != null)
                return false;
        }
        else if (!this.specificSchema.equals(other.specificSchema))
            return false;
        if (this.specificName == null) {
            if (other.specificName != null)
                return false;
        }
        else if (!this.specificName.equals(other.specificName))
            return false;
        if (this.ordinalPosition == null) {
            if (other.ordinalPosition != null)
                return false;
        }
        else if (!this.ordinalPosition.equals(other.ordinalPosition))
            return false;
        if (this.parameterMode == null) {
            if (other.parameterMode != null)
                return false;
        }
        else if (!this.parameterMode.equals(other.parameterMode))
            return false;
        if (this.parameterName == null) {
            if (other.parameterName != null)
                return false;
        }
        else if (!this.parameterName.equals(other.parameterName))
            return false;
        if (this.dataType == null) {
            if (other.dataType != null)
                return false;
        }
        else if (!this.dataType.equals(other.dataType))
            return false;
        if (this.characterMaximumLength == null) {
            if (other.characterMaximumLength != null)
                return false;
        }
        else if (!this.characterMaximumLength.equals(other.characterMaximumLength))
            return false;
        if (this.characterOctetLength == null) {
            if (other.characterOctetLength != null)
                return false;
        }
        else if (!this.characterOctetLength.equals(other.characterOctetLength))
            return false;
        if (this.numericPrecision == null) {
            if (other.numericPrecision != null)
                return false;
        }
        else if (!this.numericPrecision.equals(other.numericPrecision))
            return false;
        if (this.numericScale == null) {
            if (other.numericScale != null)
                return false;
        }
        else if (!this.numericScale.equals(other.numericScale))
            return false;
        if (this.datetimePrecision == null) {
            if (other.datetimePrecision != null)
                return false;
        }
        else if (!this.datetimePrecision.equals(other.datetimePrecision))
            return false;
        if (this.characterSetName == null) {
            if (other.characterSetName != null)
                return false;
        }
        else if (!this.characterSetName.equals(other.characterSetName))
            return false;
        if (this.collationName == null) {
            if (other.collationName != null)
                return false;
        }
        else if (!this.collationName.equals(other.collationName))
            return false;
        if (this.dtdIdentifier == null) {
            if (other.dtdIdentifier != null)
                return false;
        }
        else if (!this.dtdIdentifier.equals(other.dtdIdentifier))
            return false;
        if (this.routineType == null) {
            if (other.routineType != null)
                return false;
        }
        else if (!this.routineType.equals(other.routineType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.specificCatalog == null) ? 0 : this.specificCatalog.hashCode());
        result = prime * result + ((this.specificSchema == null) ? 0 : this.specificSchema.hashCode());
        result = prime * result + ((this.specificName == null) ? 0 : this.specificName.hashCode());
        result = prime * result + ((this.ordinalPosition == null) ? 0 : this.ordinalPosition.hashCode());
        result = prime * result + ((this.parameterMode == null) ? 0 : this.parameterMode.hashCode());
        result = prime * result + ((this.parameterName == null) ? 0 : this.parameterName.hashCode());
        result = prime * result + ((this.dataType == null) ? 0 : this.dataType.hashCode());
        result = prime * result + ((this.characterMaximumLength == null) ? 0 : this.characterMaximumLength.hashCode());
        result = prime * result + ((this.characterOctetLength == null) ? 0 : this.characterOctetLength.hashCode());
        result = prime * result + ((this.numericPrecision == null) ? 0 : this.numericPrecision.hashCode());
        result = prime * result + ((this.numericScale == null) ? 0 : this.numericScale.hashCode());
        result = prime * result + ((this.datetimePrecision == null) ? 0 : this.datetimePrecision.hashCode());
        result = prime * result + ((this.characterSetName == null) ? 0 : this.characterSetName.hashCode());
        result = prime * result + ((this.collationName == null) ? 0 : this.collationName.hashCode());
        result = prime * result + ((this.dtdIdentifier == null) ? 0 : this.dtdIdentifier.hashCode());
        result = prime * result + ((this.routineType == null) ? 0 : this.routineType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Parameters (");

        sb.append(specificCatalog);
        sb.append(", ").append(specificSchema);
        sb.append(", ").append(specificName);
        sb.append(", ").append(ordinalPosition);
        sb.append(", ").append(parameterMode);
        sb.append(", ").append(parameterName);
        sb.append(", ").append(dataType);
        sb.append(", ").append(characterMaximumLength);
        sb.append(", ").append(characterOctetLength);
        sb.append(", ").append(numericPrecision);
        sb.append(", ").append(numericScale);
        sb.append(", ").append(datetimePrecision);
        sb.append(", ").append(characterSetName);
        sb.append(", ").append(collationName);
        sb.append(", ").append(dtdIdentifier);
        sb.append(", ").append(routineType);

        sb.append(")");
        return sb.toString();
    }
}
