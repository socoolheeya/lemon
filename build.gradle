buildscript {
//	repositories {
//		mavenLocal()
//		mavenCentral()
//	}
//	dependencies {
//		classpath 'org.jooq:jooq-codegen:3.17.6'
//		classpath 'org.mariadb.jdbc:mariadb-java-client:3.0.6'
//	}
	configurations['classpath'].resolutionStrategy.eachDependency {
		if (requested.group == 'org.jooq') {
			useVersion '3.17.3'
		}
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'nu.studer.jooq' version '8.1'
}

group = 'com.sweeti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	//mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.jooq:jooq-codegen:3.17.6'
	implementation 'org.jooq:jooq-meta:3.17.6'

	jooqGenerator 'org.mariadb.jdbc:mariadb-java-client'
	jooqGenerator 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'



	//implementation 'org.hibernate.orm:hibernate-spatial:6.2.0.CR1'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:4.11.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
}

import nu.studer.gradle.jooq.JooqEdition
import org.jooq.meta.jaxb.Logging
import org.jooq.meta.*
import org.jooq.codegen.*
import org.jooq.*
import org.jooq.tools.*
import org.jooq.conf.*
import org.jooq.impl.*

jooq {
	version = '3.17.6'  // default (can be omitted)
	edition = JooqEdition.OSS  // default (can be omitted)

	configurations {
		main {  // name of the jOOQ configuration
			generateSchemaSourceOnCompilation = true  // default (can be omitted)

			generationTool {
				logging = Logging.WARN
				jdbc {
					driver = 'org.mariadb.jdbc.Driver'
					url = 'jdbc:mariadb://localhost:3306/lemon'
					username = 'lemon-api'
					password = '1234'
					properties {
						property {
							key = 'ssl'
							value = 'false'
						}
					}
				}
				generator {
					name = 'org.jooq.codegen.JavaGenerator'
					database {
						name = 'org.jooq.meta.mariadb.MariaDBDatabase'
						//inputSchema = 'lemnon'
						includes = '.*'
					}
					generate {
						deprecated = false
						records = true
						immutablePojos = true
						fluentSetters = true
					}
					target {
						packageName = 'com.sweeti.lemon'
						directory = 'src/main/generated'  // default (can be omitted)
					}
					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				}
			}
		}
	}
}

